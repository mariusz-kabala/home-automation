pipeline {
    agent any

    environment {
        app = ''
        CI = 'true'
        GIT_SSH_COMMAND = 'ssh -o StrictHostKeyChecking=no'
        GH_TOKEN = credentials('jenkins-github-accesstoken')
        HEAT_PUMP_USERNAME = credentials('HEAT_PUMP_USERNAME')
        HEAT_PUMP_PASSWORD = credentials('HEAT_PUMP_PASSWORD')
        STATS_DB_TOKEN = credentials('home-automation-stats-db-token')
        STATS_DB_HOST = "192.168.50.30"
        STATS_DB_PORT = 8086
        STATS_DB_ORGANISATION = "home"
    }

    stages {
        stage ('prepare') {
            steps {
                script {
                    sh 'printenv'
                    try {
                        branch = env.GIT_LOCAL_BRANCH
                        branch = branch ?: env.GIT_BRANCH
                        if (branch == 'detached') {
                            branch = ''
                        }
                        branch = branch ?: env.ghprbActualCommit
                    } catch (e) {
                        println 'GIT BRANCH not detected'
                    }

                    sh 'git config user.name "jenkins-kabala.tech"'
                    sh 'git config user.email "jenkins@kabala.tech"'

                    if (!branch) {
                        error 'GIT branch to process not found'
                    }

                    if (branch.startsWith('origin/')) {
                        branch = branch.replaceAll('origin/', '')
                    }

                    println "GIT branch to process: ${branch}"
                    manager.addShortText(branch, 'white', 'navy', '1px', 'navy')
                }
            }
        }
        
        stage ('Run heatPumpUsage') {
            steps {
                script {
                    docker.withRegistry('https://docker-registry.kabala.tech', 'docker-registry-credentials') {
                        sh "docker run --dns=192.168.50.160 -e YEAR='${env.YEAR}' -e MONTH='${env.MONTH}' -e STATS_DB_TOKEN='${STATS_DB_TOKEN}' -e STATS_DB_HOST='${STATS_DB_HOST}' -e STATS_DB_PORT='${STATS_DB_PORT}' -e STATS_DB_ORGANISATION='${STATS_DB_ORGANISATION}' -e HEAT_PUMP_USERNAME='${HEAT_PUMP_USERNAME}' -e HEAT_PUMP_PASSWORD='${HEAT_PUMP_PASSWORD}' docker-registry.kabala.tech/home/taskheatpumpusage:latest"
                    }
                }
            }
        }
    }
}

